{"version":3,"sources":["Component/Product.tsx","Component/Button.tsx","Component/Ripple.tsx","Component/Search.tsx","Component/NavBar.tsx","Component/Footer.tsx","Main/Plp.tsx","Main/Pdp.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["Card","styled","div","Link","a","CardMedia","img","CardContent","Typography","h5","TypographyPrice","p","TypographyStock","Chip","span","Product","product","href","UPC","src","name","price","current","value","availability","stock","Box","Button","button","ContainedButtons","toggle","setToggle","className","activeButton","onClick","RippleContainer","props","color","duration","Ripple","useState","rippleArray","setRippleArray","rippleCount","cleanUpFunction","useLayoutEffect","bounce","clearTimeout","setTimeout","useDebouncedRippleCleanUp","length","onMouseDown","event","rippleContainer","currentTarget","getBoundingClientRect","size","width","height","newRipple","x","pageX","y","pageY","map","ripple","index","style","top","left","Grid","TextField","input","Label","label","SearchBarWrapper","ButtonReset","colorBg","SearchBox","searchQuery","setSearchQuery","onChange","e","target","Search","NavBar","display","alt","Footer","rel","GridProduct","Plp","products","filter","prod","toLowerCase","includes","Pdp","useParams","productFind","find","prodotto","App","setProducts","useEffect","fetch","then","res","json","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.3c4304e5.chunk.js","sourcesContent":["import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Products } from \"../Data/Data\";\r\n\r\ntype Props = {\r\n  product: Products;\r\n};\r\n\r\nconst Card = styled.div`\r\n  background-color: rgb(255, 255, 255);\r\n  color: rgba(0, 0, 0, 0.87);\r\n  border-radius: 4px;\r\n  box-shadow: rgb(0 0 0 / 20%) 0px 2px 1px -1px,\r\n    rgb(0 0 0 / 14%) 0px 1px 1px 0px, rgb(0 0 0 / 12%) 0px 1px 3px 0px;\r\n  font-family: Roboto, Helvetica, Arial, sans-serif;\r\n`;\r\n\r\nconst Link = styled.a`\r\n  text-decoration: none;\r\n  color: black;\r\n`;\r\n\r\nconst CardMedia = styled.img`\r\n  width: 100%;\r\n  border-top-right-radius: 4px;\r\n  border-top-left-radius: 4px;\r\n`;\r\n\r\nconst CardContent = styled.div`\r\n  padding-left: 16px;\r\n  margin-top: 0px;\r\n`;\r\n\r\nconst Typography = styled.h5`\r\n  margin: 0px;\r\n  padding-top: 12px;\r\n  font-weight: 400;\r\n  font-size: 1.5rem;\r\n  line-height: 1.334;\r\n  letter-spacing: 0em;\r\n`;\r\n\r\nconst TypographyPrice = styled.p`\r\n  margin: 0px 0px 12px;\r\n  font-weight: 400;\r\n  font-size: 1rem;\r\n  line-height: 1.5;\r\n  letter-spacing: 0.00938em;\r\n  color: rgba(0, 0, 0, 0.6);\r\n`;\r\n\r\nconst TypographyStock = styled.p`\r\n  margin: 0px 0px 24px;\r\n`;\r\n\r\nconst Chip = styled.span`\r\n  font-size: 0.8125rem;\r\n  padding: 12px;\r\n  display: inline-flex;\r\n  align-items: center;\r\n  height: 32px;\r\n  color: rgba(0, 0, 0, 0.87);\r\n  background-color: rgba(0, 0, 0, 0.08);\r\n  border-radius: 16px;\r\n  letter-spacing: 0.1px;\r\n  cursor: default;\r\n  outline: 0px;\r\n  text-decoration: none;\r\n  border: 0px;\r\n  vertical-align: middle;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst Product: React.FC<Props> = ({ product }) => {\r\n  return (\r\n    <Card key={product.UPC}>\r\n      <Link href={`/product/${product.UPC}`}>\r\n        <CardMedia src=\"https://via.placeholder.com/350\" />\r\n        <CardContent>\r\n          <Typography>{product.name}</Typography>\r\n          <TypographyPrice>$ {product.price.current.value}</TypographyPrice>\r\n          <TypographyStock>\r\n            {product.availability.stock > 0 ? (\r\n              <Chip> in stock </Chip>\r\n            ) : (\r\n              <Chip> out of stock </Chip>\r\n            )}\r\n          </TypographyStock>\r\n        </CardContent>\r\n      </Link>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\ntype Props = {\r\n  toggle: string;\r\n  setToggle: (toggle: \"none\" | \"in\" | \"out\") => void;\r\n};\r\n\r\ntype BgButton = {\r\n  activeButton: boolean;\r\n};\r\n\r\nconst Box = styled.div`\r\n  margin-top: 22px;\r\n  @media (min-width: 1280px) {\r\n    margin-left: 82px;\r\n  }\r\n  @media (min-width: 768px) {\r\n    margin-right: -20px;\r\n  }\r\n  @media (max-width: 540px) {\r\n    margin-left: 10px;\r\n    margin-right: 50px;\r\n  }\r\n  @media (max-width: 414px) {\r\n    margin-right: 50px;\r\n  }\r\n  @media (max-width: 280px) {\r\n    margin-right: 0px;\r\n  }\r\n`;\r\n\r\nconst Button = styled.button<BgButton>`\r\n  background-color: transparent;\r\n  color: #1976d2;\r\n  height: 36px;\r\n  min-width: 64px;\r\n  padding: 5px 15px;\r\n  cursor: pointer;\r\n  border: 1px solid rgba(25, 118, 210, 0.5);\r\n  font-weight: 500;\r\n  font-size: 0.875rem;\r\n  line-height: 1.75;\r\n  letter-spacing: 0.02857em;\r\n  box-shadow: 0px 1.5px #888888;\r\n  vertical-align: middle;\r\n  transition: 250ms;\r\n  &.in {\r\n    border-radius: 5px 0 0 5px;\r\n  }\r\n  &.out {\r\n    border-radius: 0 5px 5px 0;\r\n  }\r\n  &:hover {\r\n    background-color: rgba(25, 118, 210, 0.04);\r\n    color: #1976d2;\r\n    border: 1px solid rgb(25, 118, 210);\r\n  }\r\n  &.selected {\r\n    background-color: #1976d2;\r\n    color: #fff;\r\n  }\r\n  &.selected:hover {\r\n    background-color: #155697;\r\n  }\r\n`;\r\n\r\nconst ContainedButtons: React.FC<Props> = ({ toggle, setToggle }) => {\r\n  return (\r\n    <Box>\r\n      <Button\r\n        className={toggle === \"in\" ? \"in selected\" : \"in\"}\r\n        activeButton={toggle === \"in\"}\r\n        onClick={() => (toggle === \"in\" ? setToggle(\"none\") : setToggle(\"in\"))}\r\n      >\r\n        IN STOCK\r\n      </Button>\r\n      <Button\r\n        className={toggle === \"out\" ? \"out selected\" : \"out\"}\r\n        activeButton={toggle === \"out\"}\r\n        onClick={() =>\r\n          toggle === \"out\" ? setToggle(\"none\") : setToggle(\"out\")\r\n        }\r\n      >\r\n        OUT OF STOCK\r\n      </Button>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ContainedButtons;\r\n","import React, { useState, useLayoutEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\ntype Props = {\r\n  color: any;\r\n  duration: any;\r\n};\r\n\r\nconst RippleContainer = styled.div<Props>`\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n\r\n  span {\r\n    transform: scale(0);\r\n    border-radius: 100%;\r\n    position: absolute;\r\n    opacity: 0.75;\r\n    background-color: ${(props) => props.color};\r\n    animation-name: ripple;\r\n    animation-duration: ${(props) => props.duration}ms;\r\n  }\r\n\r\n  @keyframes ripple {\r\n    to {\r\n      opacity: 0;\r\n      transform: scale(2);\r\n    }\r\n  }\r\n`;\r\n\r\nconst useDebouncedRippleCleanUp = (\r\n  rippleCount: number,\r\n  duration: number,\r\n  cleanUpFunction: any\r\n) => {\r\n  useLayoutEffect(() => {\r\n    let bounce: any = null;\r\n    if (rippleCount > 0) {\r\n      clearTimeout(bounce);\r\n\r\n      bounce = setTimeout(() => {\r\n        cleanUpFunction();\r\n        clearTimeout(bounce);\r\n      }, duration * 4);\r\n    }\r\n\r\n    return () => clearTimeout(bounce);\r\n  }, [rippleCount, duration, cleanUpFunction]);\r\n};\r\n\r\nconst Ripple = ({ duration = 850, color = \"rgba(255,255,255,0.4)\" }) => {\r\n  const [rippleArray, setRippleArray] = useState<any>([]);\r\n\r\n  useDebouncedRippleCleanUp(rippleArray.length, duration, () => {\r\n    setRippleArray([]);\r\n  });\r\n\r\n  const addRipple = (event: {\r\n    currentTarget: { getBoundingClientRect: () => any };\r\n    pageX: number;\r\n    pageY: number;\r\n  }) => {\r\n    const rippleContainer = event.currentTarget.getBoundingClientRect();\r\n    const size =\r\n      rippleContainer.width > rippleContainer.height\r\n        ? rippleContainer.width\r\n        : rippleContainer.height;\r\n    const x = event.pageX - rippleContainer.x - size / 2;\r\n    const y = event.pageY - rippleContainer.y - size / 2;\r\n    const newRipple = {\r\n      x,\r\n      y,\r\n      size,\r\n    };\r\n\r\n    setRippleArray([...rippleArray, newRipple]);\r\n  };\r\n\r\n  return (\r\n    <RippleContainer duration={duration} color={color} onMouseDown={addRipple}>\r\n      {rippleArray.length > 0 &&\r\n        rippleArray.map((ripple: any, index: any) => {\r\n          return (\r\n            <span\r\n              key={\"span\" + index}\r\n              style={{\r\n                top: ripple.y,\r\n                left: ripple.x,\r\n                width: ripple.size,\r\n                height: ripple.size,\r\n              }}\r\n            />\r\n          );\r\n        })}\r\n    </RippleContainer>\r\n  );\r\n};\r\n\r\nRipple.propTypes = {\r\n  duration: PropTypes.number,\r\n  color: PropTypes.string,\r\n};\r\n\r\nexport default Ripple;\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Ripple from \"./Ripple\";\r\n\r\ntype Props = {\r\n  searchQuery: string;\r\n  setSearchQuery: (searchQuery: string) => void;\r\n};\r\n\r\ntype AnimationButton = {\r\n  colorBg: boolean;\r\n};\r\n\r\nconst Grid = styled.div`\r\n  margin-right: 1px;\r\n  @media (min-width: 1280px) {\r\n    margin-right: 117px;\r\n  }\r\n`;\r\n\r\nconst TextField = styled.input`\r\n  font-size: 17px;\r\n  padding: 10px;\r\n  padding-left: 19px;\r\n  height: 34px;\r\n  margin-right: 16px;\r\n  border: 1px solid rgb(100, 100, 100, 0.5);\r\n  border-radius: 3px;\r\n  &:focus {\r\n    outline: none;\r\n    border: 2px solid #1976d2;\r\n  }\r\n  @media (min-width: 1280px) {\r\n    width: 380px;\r\n  }\r\n  @media (max-width: 540px) {\r\n    width: 380px;\r\n  }\r\n  @media (max-width: 414px) {\r\n    width: 200px;\r\n  }\r\n  @media (max-width: 320px) {\r\n    width: 100px;\r\n  }\r\n`;\r\n\r\nconst Label = styled.label`\r\n  color: gray;\r\n  font-size: 17px;\r\n  letter-spacing: inherit;\r\n  font-weight: normal;\r\n  position: absolute;\r\n  pointer-events: none;\r\n  left: 14px;\r\n  top: 15px;\r\n  transition: 0.2s ease all;\r\n  ${TextField}:focus ~ & {\r\n    top: -10px;\r\n    font-size: 13px;\r\n    color: #1976d2;\r\n    background-color: white;\r\n    width: 40px;\r\n    padding-left: 5px;\r\n  }\r\n  &.up {\r\n    top: -10px;\r\n    font-size: 13px;\r\n    color: #1976d2;\r\n    background-color: white;\r\n    width: 40px;\r\n    padding-left: 5px;\r\n  }\r\n`;\r\nconst SearchBarWrapper = styled.div`\r\n  position: relative;\r\n  margin-top: 8px;\r\n  margin-left: 10px;\r\n  display: flex;\r\n`;\r\n\r\nconst ButtonReset = styled.button<AnimationButton>`\r\n  position: relative;\r\n  height: 36px;\r\n  margin-top: 10px;\r\n  overflow: hidden;\r\n  cursor: pointer;\r\n  background: ${(props) => (props.colorBg ? \"#1976d2\" : \"white\")};\r\n  color: ${(props) => (props.colorBg ? \"white\" : \"#1976d2\")};\r\n  transition: background 0.5s;\r\n  font-weight: 500;\r\n  font-size: 0.875rem;\r\n  line-height: 1.75;\r\n  letter-spacing: 0.02857em;\r\n  text-transform: uppercase;\r\n  min-width: 64px;\r\n  padding: 6px 15.5px;\r\n  border-radius: 4px;\r\n  border: none;\r\n  box-shadow: rgb(0 0 0 / 20%) 0px 3px 1px -2px,\r\n    rgb(0 0 0 / 14%) 0px 2px 2px 0px, rgb(0 0 0 / 12%) 0px 1px 5px 0px;\r\n  transition: 0.8s;\r\n  &:active {\r\n    background-color: #1976d2;\r\n    opacity: 0.7;\r\n    transition: 2s;\r\n    box-shadow: 5px 5px 20px 0px #000000;\r\n  }\r\n  &:hover {\r\n    background-color: #155697;\r\n  }\r\n`;\r\n\r\nconst SearchBox: React.FC<Props> = ({ searchQuery, setSearchQuery }) => (\r\n  <SearchBarWrapper>\r\n    <TextField\r\n      onChange={(e) => setSearchQuery(e.target.value)}\r\n      value={searchQuery}\r\n    />\r\n    <Label className={searchQuery === \"\" ? \"\" : \"up\"}>search</Label>\r\n    <ButtonReset\r\n      colorBg\r\n      onClick={() => {\r\n        setSearchQuery(\"\");\r\n      }}\r\n    >\r\n      RESET\r\n      <Ripple />\r\n    </ButtonReset>\r\n  </SearchBarWrapper>\r\n);\r\n\r\nconst Search: React.FC<Props> = ({ searchQuery, setSearchQuery }) => {\r\n  return (\r\n    <Grid>\r\n      <SearchBox searchQuery={searchQuery} setSearchQuery={setSearchQuery} />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ContainedButtons from \"./Button\";\r\nimport Search from \"../Component/Search\";\r\n\r\ntype Props = {\r\n  toggle: string;\r\n  setToggle: (toggle: \"none\" |\"in\" | \"out\") => void;\r\n  searchQuery: string;\r\n  setSearchQuery: (searchQuery: string) => void;\r\n};\r\n\r\nconst Grid = styled.div`\r\n  border-bottom: 1px solid black;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst NavBar: React.FC<Props> = ({\r\n  toggle,\r\n  setToggle,\r\n  searchQuery,\r\n  setSearchQuery,\r\n}) => {\r\n  return (\r\n    <Grid>\r\n      <img\r\n        style={{ display: \"block\" }}\r\n        src=\"https://via.placeholder.com/150x80\"\r\n        alt=\"logo\"\r\n      />\r\n      <ContainedButtons toggle={toggle} setToggle={setToggle} />\r\n      <Search searchQuery={searchQuery} setSearchQuery={setSearchQuery} />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Box = styled.div`\r\n  background-color: #bdbdbd;\r\n  text-align: right;\r\n  padding: 16px;\r\n  position: absolute;\r\n  bottom: 0;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n  font-family: Roboto, Helvetica, Arial, sans-serif;\r\n`;\r\n\r\nconst Button = styled.a`\r\n  display: inline-flex;\r\n  background-color: transparent;\r\n  cursor: pointer;\r\n  text-decoration: none;\r\n  font-size: 0.875rem;\r\n  line-height: 1.75;\r\n  letter-spacing: 0.02857em;\r\n  text-transform: uppercase;\r\n  min-width: 64px;\r\n  padding: 6px 8px;\r\n  color: rgb(25, 118, 210);\r\n  border: 0px;\r\n  vertical-align: middle;\r\n  &.border {\r\n    border-right: 1px solid rgb(25, 118, 210);\r\n  }\r\n`;\r\n\r\nconst Footer: React.FC = () => {\r\n  return (\r\n    <Box>\r\n      <a href=\"https://www.facebook.com\" target=\"_blank\" rel=\"noreferrer\">\r\n        <Button className=\"border\">TWITTER</Button>\r\n      </a>\r\n      <a href=\"https://www.twitter.com\" target=\"_blank\" rel=\"noreferrer\">\r\n        <Button>FACEBOOK</Button>\r\n      </a>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import * as React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useState } from \"react\";\r\nimport Product from \"../Component/Product\";\r\nimport NavBar from \"../Component/NavBar\";\r\nimport { Products } from \"../Data/Data\";\r\nimport Footer from \"../Component/Footer\";\r\n\r\nconst Grid = styled.div`\r\n  min-height: 100vh;\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst GridProduct = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 24.15% 24.15% 24.15% 24.15%;\r\n  @media (max-width: 1280px) {\r\n    grid-template-columns: 24% 24% 24% 24%;\r\n  }\r\n  @media (max-width: 1024px) {\r\n    grid-template-columns: 45% 45%;\r\n  }\r\n  @media (max-width: 414px) {\r\n    grid-template-columns: 98%;\r\n  }\r\n  padding-top: 16px;\r\n  padding-left: 16px;\r\n  padding-bottom: 84px;\r\n  @media (max-width: 1280px) {\r\n    padding-left: 5px;\r\n  }\r\n  @media (max-width: 1024px) {\r\n    padding-left: 55px;\r\n  }\r\n  @media (max-width: 768px) {\r\n    padding-left: 40px;\r\n  }\r\n  @media (max-width: 540px) {\r\n    padding-left: 25px;\r\n  }\r\n  @media (max-width: 414px) {\r\n    padding-left: 7px;\r\n  }\r\n  gap: 16px;\r\n`;\r\n\r\ntype Props = {\r\n  products: Products[];\r\n};\r\n\r\nconst Plp: React.FC<Props> = ({ products }) => {\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n\r\n  const [toggle, setToggle] = useState<\"none\" | \"in\" | \"out\">(\"none\");\r\n\r\n  return (\r\n    <Grid>\r\n      <NavBar\r\n        toggle={toggle}\r\n        setToggle={setToggle}\r\n        searchQuery={searchQuery}\r\n        setSearchQuery={setSearchQuery}\r\n      />\r\n      <GridProduct>\r\n        {products\r\n          ?.filter((prod) => {\r\n            switch (toggle) {\r\n              case \"in\":\r\n                return prod.availability.stock > 0;\r\n              case \"out\":\r\n                return prod.availability.stock <= 0;\r\n              default:\r\n                return true;\r\n            }\r\n          })\r\n          .filter((prod) => {\r\n            return prod.name.toLowerCase().includes(searchQuery.toLowerCase());\r\n          })\r\n          .map((product, index) => (\r\n            <Product product={product} key={index} />\r\n          ))}\r\n      </GridProduct>\r\n      <Footer />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Plp;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Product from \"../Component/Product\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Products } from \"../Data/Data\";\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 25%;\r\n`;\r\n\r\ntype Props = {\r\n  products: Products[];\r\n};\r\n\r\nconst Pdp: React.FC<Props> = ({ products }) => {\r\n  const { UPC } = useParams<{ UPC: string }>();\r\n  const productFind = products.find((prodotto) => prodotto.UPC === UPC);\r\n  return productFind ? (\r\n    <Grid>\r\n      <Product product={productFind} />\r\n    </Grid>\r\n  ) : null;\r\n};\r\n\r\nexport default Pdp;\r\n","import \"./App.css\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Plp from \"./Main/Plp\";\nimport Pdp from \"./Main/Pdp\";\nimport { Products } from \"./Data/Data\";\nimport React, { useEffect, useState } from \"react\";\n\nconst App: React.FC = () => {\n  const [products, setProducts] = useState<Products[]>([]);\n\n  useEffect(() => {\n    fetch(\n      \"https://assets.fc-dev.instore.oakley.com/assets/products/products.json\"\n    )\n      .then((res) => res.json())\n      .then((products) => setProducts(products));\n  }, []);\n  return (\n    <Switch>\n      <Route path=\"/product/:UPC\">\n        <Pdp products={products} />\n      </Route>\n      <Route path=\"/\">\n        <Plp products={products} />\n      </Route>\n    </Switch>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename=\"/\">\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}