{"version":3,"sources":["Component/Button.js","Component/AppBar.js","App.js","reportWebVitals.js","index.js"],"names":["ContainedButtons","Stack","direction","spacing","Button","variant","href","Search","styled","theme","position","borderRadius","shape","backgroundColor","alpha","palette","common","white","marginRight","marginLeft","width","breakpoints","up","SearchIconWrapper","padding","height","pointerEvents","display","alignItems","justifyContent","StyledInputBase","InputBase","color","paddingLeft","transition","transitions","create","PrimarySearchAppBar","React","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleMobileMenuClose","handleMenuClose","renderMenu","Menu","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","MenuItem","onClick","renderMobileMenu","IconButton","size","Badge","badgeContent","event","currentTarget","Box","sx","flexGrow","AppBar","Toolbar","Typography","noWrap","component","xs","sm","placeholder","inputProps","md","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e15d00b.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\n\r\nexport default function ContainedButtons() {\r\n  return (\r\n    <Stack direction=\"row\" spacing={2}>\r\n      <Button variant=\"contained\">In stock</Button>\r\n      <Button variant=\"contained\" href=\"#contained-buttons\">\r\n        Out of stock\r\n      </Button>\r\n    </Stack>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport { styled, alpha } from \"@mui/material/styles\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport InputBase from \"@mui/material/InputBase\";\r\nimport Badge from \"@mui/material/Badge\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Menu from \"@mui/material/Menu\";\r\n// import MenuIcon from \"@mui/icons-material/Menu\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\r\nimport MailIcon from \"@mui/icons-material/Mail\";\r\nimport NotificationsIcon from \"@mui/icons-material/Notifications\";\r\n// import MoreIcon from \"@mui/icons-material/MoreVert\";\r\nimport ContainedButtons from \"./Button\";\r\n\r\nconst Search = styled(\"div\")(({ theme }) => ({\r\n  position: \"relative\",\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n  \"&:hover\": {\r\n    backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n  },\r\n  marginRight: theme.spacing(2),\r\n  marginLeft: 0,\r\n  width: \"100%\",\r\n  [theme.breakpoints.up(\"sm\")]: {\r\n    marginLeft: theme.spacing(3),\r\n    width: \"auto\",\r\n  },\r\n}));\r\n\r\nconst SearchIconWrapper = styled(\"div\")(({ theme }) => ({\r\n  padding: theme.spacing(0, 2),\r\n  height: \"100%\",\r\n  position: \"absolute\",\r\n  pointerEvents: \"none\",\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n}));\r\n\r\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n  color: \"inherit\",\r\n  \"& .MuiInputBase-input\": {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"20ch\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function PrimarySearchAppBar() {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n\r\n  // const handleMobileMenuOpen = (event) => {\r\n  //   setMobileMoreAnchorEl(event.currentTarget);\r\n  // };\r\n\r\n  const menuId = \"primary-search-account-menu\";\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem>\r\n        <IconButton size=\"large\" aria-label=\"show 4 new mails\" color=\"inherit\">\r\n          <Badge badgeContent={4} color=\"error\">\r\n            <MailIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Messages</p>\r\n      </MenuItem>\r\n      <MenuItem>\r\n        <IconButton\r\n          size=\"large\"\r\n          aria-label=\"show 17 new notifications\"\r\n          color=\"inherit\"\r\n        >\r\n          <Badge badgeContent={17} color=\"error\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Notifications</p>\r\n      </MenuItem>\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          size=\"large\"\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>Profile</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography\r\n            variant=\"h6\"\r\n            noWrap\r\n            component=\"div\"\r\n            sx={{ display: { xs: \"none\", sm: \"block\" } }}\r\n          >\r\n            MUI\r\n          </Typography>\r\n          <Search>\r\n            <SearchIconWrapper>\r\n              <SearchIcon />\r\n            </SearchIconWrapper>\r\n            <StyledInputBase\r\n              placeholder=\"Search…\"\r\n              inputProps={{ \"aria-label\": \"search\" }}\r\n            />\r\n          </Search>\r\n          <ContainedButtons />\r\n          <Box sx={{ flexGrow: 1 }} />\r\n          <Box sx={{ display: { xs: \"none\", md: \"flex\" } }}>\r\n            {/* <IconButton\r\n              size=\"large\"\r\n              aria-label=\"show 4 new mails\"\r\n              color=\"inherit\"\r\n            >\r\n              <Badge badgeContent={4} color=\"error\">\r\n                <MailIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton\r\n              size=\"large\"\r\n              aria-label=\"show 17 new notifications\"\r\n              color=\"inherit\"\r\n            >\r\n              <Badge badgeContent={17} color=\"error\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton\r\n              size=\"large\"\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls={menuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleProfileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <AccountCircle />\r\n            </IconButton>\r\n          </Box>\r\n          <Box sx={{ display: { xs: \"flex\", md: \"none\" } }}>\r\n            <IconButton\r\n              size=\"large\"\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton> */}\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n    </Box>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport PrimarySearchAppBar from \"./Component/AppBar\";\n\nfunction App() {\n  return (\n    <div>\n      <PrimarySearchAppBar />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}